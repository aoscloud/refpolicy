## <summary>policy for aos components</summary>

########################################
## <summary>
##	Execute aos_exec_t in the aos domain.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`aos_domtrans',`
	gen_require(`
		type aos_t, aos_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, aos_exec_t, aos_t)
')

######################################
## <summary>
##	Execute aos in the caller domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`aos_exec',`
	gen_require(`
		type aos_exec_t;
	')

	corecmd_search_bin($1)
	can_exec($1, aos_exec_t)
')

########################################
## <summary>
##	Read aos var PID files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`aos_read_pid_files',`
	gen_require(`
		type aos_var_run_t;
	')

	files_search_pids($1)
	read_files_pattern($1, aos_var_run_t, aos_var_run_t)
')

########################################
## <summary>
##	mounton a /var/aos directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`files_mounton_aos_dirs',`
	gen_require(`
		type aos_var_run_t;
	')

	allow $1 aos_var_run_t:dir mounton;
')

########################################
## <summary>
##	Manage quota files in /var/aos directory.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`files_manage_quota_aos',`
	gen_require(`
		type aos_var_run_t;
	')

	allow $1 aos_var_run_t:dir { add_name remove_name write };
	allow $1 aos_var_run_t:file { create rename setattr write quotaon unlink };
')

